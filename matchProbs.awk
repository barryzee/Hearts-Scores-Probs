## matchProbs ##

# gawk -f  matchProbs.awk /Users/barryzeeberg/personal/hearts/score/score.testing.01.23.19/results/03_01_2019_22_51_09_0_0.0500_10000_0_novice_20_99_1.xls /Users/barryzeeberg/personal/hearts/score/score.testing.01.23.19/results/02_26_2019_08_50_57_0_0.0500_10000_1_expert_20_99_1.xls /Users/barryzeeberg/personal/hearts/score/score.testing.01.23.19/results/02_25_2019_23_18_33_0_0.0500_1000_1_expert_20_99_1.xls 20 20 20 44
# 03_01_2019_22_51_09_0_0.0500_10000_0_novice_20_99_1.xls	   20	   20	   20	   44	  0.317996	  0.312451	  0.319261	  0.050292	
# 02_26_2019_08_50_57_0_0.0500_10000_1_expert_20_99_1.xls	   20	   20	   20	   44	  0.259975	  0.263956	  0.263766	  0.212302	
# 02_25_2019_23_18_33_0_0.0500_1000_1_expert_20_99_1.xls	   20	   20	   20	   44	  0.251668	  0.267874	  0.257388	  0.223070

# gawk -f  matchProbs.awk /Users/barryzeeberg/personal/hearts/score/score.testing.01.23.19/results/03_06_2019_02_29_12_0_0.0500_1000_0_novice_20_99_1_0.1000_0.4000_0.5000_0.6000.xls /Users/barryzeeberg/personal/hearts/score/score.testing.01.23.19/results/03_06_2019_09_23_21_0_0.0500_1000_1_novice_20_99_1_0.1000_0.4000_0.5000_0.6000.xls /Users/barryzeeberg/personal/hearts/score/score.testing.01.23.19/results/03_07_2019_11_48_20_0_0.0500_1000_1_intermediate_20_99_1_0.1000_0.4000_0.5000_0.6000.xls /Users/barryzeeberg/personal/hearts/score/score.testing.01.23.19/results/03_08_2019_13_34_19_0_0.0500_1000_1_advanced_20_99_1_0.1000_0.4000_0.5000_0.6000.xls /Users/barryzeeberg/personal/hearts/score/score.testing.01.23.19/results/03_04_2019_22_12_34_0_0.0500_1000_1_expert_20_99_1_0.1000_0.4000_0.5000_0.6000.xls 20 20 20 44

# to process all xls in a directory, eg
# gawk -f  matchProbs.awk `ls ../results/*xls` 20 20 20 44
# gawk -f  matchProbs.awk `ls ../results/*xls` 20 20 58 84 > mp.20.20.58.84.xls
# gawk -f  matchProbs.awk `ls ../results.original.squash.function.archived.02.25.19/*xls` 20 20 58 84 >> mp.20.20.58.84.xls

# compare a single score for 4 players across multiple files that had been generated by winner.good.dev.awk
# this allows spot check reproducibility of repeated runs
# or comparison the effect of number of iterations
# or changing parameters such as "novice" versus "expert" level
# or calibration of proper squash function parameters

# note that the 4 score parameters must be a valid set that is present in the data file
# eg, must be a score that could actually occur in hearts game
# ie, sum of 4 scores must be multiple of 26
# and scores must be given in non-descending order
# each individual score must be less than 100

BEGIN {
	NICEFORMAT=1
	NFILES=ARGC-5
	VSTART=ARGC-4

	for(i=1;i<=NFILES;i++)
		fnames[i]=ARGV[i]
		
	for(i=0;i<=3;i++)
		v[i+1]=ARGV[VSTART+i]

	ARGC=NFILES+1 # "gawk" counts as an ARGC

	print "\tPmoon\tN\tBIAS\tLEVEL\tSQUASH5\tSQUASH10\tSQUASH20\tSQUASH100\tSCORE1\tSCORE2\tSCORE3\tSCORE4\tPROB1\tPROB2\tPROB3\tPROB4" > "out.xls"
}
{
	if($1==v[1] && $2==v[2] && $3==v[3] && $4==v[4]) {
		if(NICEFORMAT) {
			sub(/\.xls/,"",FILENAME)
			split(FILENAME,fn,"/",seps)
			split(fn[length(fn)],sp,"_",seps)
			for(i=8;i<=11;i++) printf("\t") sp[i] > "out.xls"
			if(length(sp)==14) print "\t\t\t\t" > "out.xls"
			for(i=15;i<=length(sp);i++) printf("\t") sp[i] > "out.xls"
			print "\t"$0 > "out.xls"
		}
		else {
			split(FILENAME,fn,"/",seps)
			print fn[length(fn)]"\t"$0
		}
		nextfile
	}
}